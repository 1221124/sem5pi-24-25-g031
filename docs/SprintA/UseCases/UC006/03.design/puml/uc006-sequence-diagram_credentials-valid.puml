@startuml "uc006-sequence-diagram_credentials-valid"
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline

skinparam classAttributeIconSize 0

title Sequence Diagram (SD) - UC006\nValid Credentials

participant BackofficeLoginController as Controller <<application>>
participant BackofficeLoginService as Service <<persistence>>
participant UserDTO as DTO <<data>>
participant User as Domain <<entity>>
database UserRepository as UserRepository <<repository>>
participant IUserRepository as IUserRepository <<interface>>

--> Controller : POST /api/login-backofficeuser\nBody: {username, password}
activate Controller

    Controller -> Service: Login(dto)
    activate Service

        Service -> Domain: new User(dto.getUsername(), dto.getPassword())
        activate Domain
            
            Domain --> Service: user
            deactivate Domain

        Service -> UserRepository: AddAsync(user)
        activate UserRepository
            
            UserRepository -> IUserRepository: AddAsync(user)
            activate IUserRepository            
                deactivate IUserRepository
            
            UserRepository --> Service: userRepo
            deactivate UserRepository

        Service -> Domain: user.PasswordValidation(userRepo.getPassword())
        activate Domain
            Domain --> Service: true
            deactivate Domain

        alt userRepo is staff
        Service -> Domain: userRepo.IsStaff()
        activate Domain
            Domain --> Service: true
            deactivate Domain

        Service -> DTO: new UserDTO(userRepo.getUsername())
        activate DTO
            DTO --> Service: userDto
            deactivate DTO

        Service --> Controller: userDto
        deactivate Service

    <-- Controller : 200 OK\nBody: {userDto}

        else user is not staff
        Service -> Domain: userRepo.IsStaff()
        activate Service
        activate Domain
            Domain --> Service: false
            deactivate Domain

        Service -> DTO: new UserDTO(userRepo.getUsername())
        activate DTO
            DTO --> Service: userDto
            deactivate DTO

        Service --> Controller: userDto
        deactivate Service

    <-- Controller : 403 Forbidden\nBody: {userDto}
    deactivate Controller
    
        end
@enduml
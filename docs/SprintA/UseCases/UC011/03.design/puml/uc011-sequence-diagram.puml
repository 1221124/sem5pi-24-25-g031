@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline

skinparam classAttributeIconSize 0

title Sequence Diagram (SD) - UC011


participant "Routing" as Routing 
participant "PatientController" as Controller <<controller>>
participant ":PatientService" as Service <<service>>
participant ":IPatientRepository" as IPatientRepository <<interface>>
participant "PatientDTO" as PatientDTO <<dto>>

loop for each search criteria

  note right of Routing
    the "criteria" can be any of the following: name, email, 
    phone number, medical record number, date of birth, gender.
    The method "GetByCriteria" will be called for each search criteria.
    "searchCriteria" is from the type e.g "Name"
    Exemplo:"Name=Guilherme&email=1220786@isep.ipp.pt"
  end note

  -> Routing: GET/Patients/?searchCriteria=criteria
  activate Routing

    Routing -> Controller: GetByCriteria(criteria)
    activate Controller

      Controller -> Service: GetByCriteriaAsync(criteria)
      activate Service

        Service -> IPatientRepository: GetByCriteriaAsync(criteria)
        activate IPatientRepository

          IPatientRepository --> Service: List<Patient>
        deactivate IPatientRepository

        Service -> PatientDTO**: create new List<PatientDTO>
        activate PatientDTO
  
          PatientDTO -> Service: patientDtoList
        deactivate PatientDTO  

        Service -> Service: List<PatientDTO> patientDtoList.addAll(List<PatientDto>)
end

        Service -> Service: patientDtoList.Distinct()

        Service --> Controller: patientDtoList
      deactivate Service

      Controller --> Routing: patientDtoList
    deactivate Controller

    <- Routing : response
  deactivate Routing




@enduml
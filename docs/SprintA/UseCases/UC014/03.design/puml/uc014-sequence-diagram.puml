@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline

skinparam classAttributeIconSize 0

title Sequence Diagram (SD) - UC014

participant ":Routing" as Routing
participant ":StaffController" as Controller <<controller>>
participant ":StaffService" as Service <<service>>
participant ":LogService" as LogService <<service>>
participant "Staff" as Staff <<entity>>
participant "StaffMapper" as Mapper <<mapper>>
participant ":IStaffRepository" as IRepository <<interface>>
participant "StaffDTO" as StaffDTO <<dto>>

-> Routing: DELETE /api/staff
activate Routing

Routing -> Controller: SoftDelete(staffID)
activate Controller

    Controller -> Service: InactivateAsync(staffID)
    activate Service

        Service -> IRepository: GetByIdAsync(staffID)
        activate IRepository

            IRepository --> Service: staff

        deactivate IRepository

        Service -> Staff: SetStatus(INACTIVE)
        activate Staff
            Staff --> Service: void
        deactivate Staff

        Service -> Mapper: ToDto(staff)
        activate Mapper

            Mapper -> StaffDTO: new StaffDTO(staff.Name, staff.Status, staff.Email, staff.Phone, staff.Role, staff.Department, staff.CreatedAt, staff.UpdatedAt)
            activate StaffDTO
                StaffDTO --> Mapper: dto
            deactivate StaffDTO

            Mapper --> Service: dto
        deactivate Mapper

    Service --> Controller: dto
    deactivate Service

    Controller -> LogService: LogChanges(staff)
    activate LogService
        LogService --> Controller: void
    deactivate LogService

Controller --> Routing: 200 OK 
deactivate Controller

<- Routing: 200 OK
deactivate Routing

@enduml
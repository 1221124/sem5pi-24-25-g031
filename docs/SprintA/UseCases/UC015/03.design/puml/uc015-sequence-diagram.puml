@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0

title Sequence Diagram (SD) - UC015

participant ":Routing" as Routing
participant ":DeactivateStaffController" as Controller <<controller>>
participant ":StaffService" as Service <<service>>
participant ":IStaffRepository" as IRepository <<interface>>
participant "StaffDTO" as StaffDTO <<dto>>

loop for each search criteria

  note right of Routing
    the "searchCriteria" can be any of the following: name, email and specialization.
    The method "GetByCriteria" will be called for each search criteria.
    "searchCriteria" is from the type e.g "Name"
    Exemplo:"Name=Beatriz&email=1200347@isep.ipp.pt"
  end note

  -> Routing: GET /Staff/?searchCriteria=criteria
  activate Routing

  Routing -> Controller: GetAll(StaffID)
  activate Controller

    Controller -> Service: GetAllAsync(staff)
    activate Service

      Service -> IRepository: GetAllAsync(staff)
      activate IRepository

      IRepository --> Service: List<Staff>
      deactivate IRepository

      Service -> StaffDTO: create new List<StaffDTO>
      activate StaffDTO

      StaffDTO -> Service: staffDtoList
      deactivate StaffDTO

      Service -> Service: List<PatientDTO> patientDtoList.addAll(List<PatientDto>)

    Service -> Service: patientDtoList.Distinct()
    Service --> Controller: patientDtoList
    deactivate Service

  Controller --> Routing: patientDtoList
  deactivate Controller

  <- Routing : response
  deactivate Routing

end loop

@enduml

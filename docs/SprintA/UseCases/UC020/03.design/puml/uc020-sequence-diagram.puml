@startuml uc020-sequence-diagram

skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0

title Sequence Diagram (SD) - UC020

actor Admin as Adm
participant "Postman (Client Interface Simulator)" as Client
participant "OperationTypeController" as Controller
participant "OperationTypeService" as Service
participant "OperationType" as Domain
participant "OperationTypeRepository" as Repository
participant "IOperationTypeRepository" as IRepo
participant "CreatingOperationTypeDto" as Dto

-> Controller: POST /api/operationtype \n Body: {name, staffBySpecialization, phasesDuration}

activate Controller

    Controller -> Dto: new CreatingOperationTypeDto(name, staffBySpecialization, phasesDuration)

    activate Dto

        Dto --> Controller: dto

    deactivate Dto

    Controller -> Service: AddAsync(dto)

    activate Service

        Service -> Service: ValidateOperationTypeName(name)

        Service -> Repository: GetByNameAsync(name)

        activate Repository

            Repository --> Service: 404 Not Found (Operation Type with said name)

        deactivate Repository

        Service -> Domain: new OperationType(dto.getName(), dto.getSpecialization(), dto.getRequiredStaff(), dto.getPhasesDuration())

        activate Domain

            Domain --> Service: operationType

        deactivate Domain

        Service -> Repository: AddAsync(dto)

        activate Repository

            Repository -> IRepo: AddAsync(operationType)

            activate IRepo

                IRepo --> Repository: 201 Created (Operation Type successfully saved)

            deactivate IRepo

            Repository --> Service: Operation Type successfully saved

        deactivate Repository

        Service --> Controller: 201 Created (Operation Type successfully saved)

    deactivate Service

    Controller --> : 201 Created \n Body: {operationTypeId}

deactivate Controller

@enduml

@startuml uc023-sequence-diagram

skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0

title Sequence Diagram (SD) - UC023

participant "OperationTypeController" as Controller
participant "OperationTypeService" as Service
participant "OperationType" as Domain
participant "OperationTypeRepository" as Repository
participant "IOperationTypeRepository" as IRepo

-> Controller: GET /api/operationtype

activate Controller

    Controller -> Service: GetAll()

    activate Service

        Service -> Repository: GetAllAsync()

        activate Repository

            Repository -> IRepo: GetAllAsync()
            
            activate IRepo

                IRepo --> Repository: operationTypes

            deactivate IRepo

            Repository --> Service: operationTypesDtoList

        deactivate Repository

        Service --> Controller: operationTypesDtoList

    deactivate Service

    <-- Controller: operationTypesDtoList

deactivate Controller

opt Admin wants to filter by name

    -> Controller: GET /api/operationtype?filter=filter

    activate Controller

        Controller -> Service: GetByName(name)
        
        activate Service

            Service -> Repository: GetByNameAsync(name)

            activate Repository

                Repository -> IRepo: GetByNameAsync(name)
                
                activate IRepo

                    IRepo --> Repository: operationType

                deactivate IRepo

                Repository --> Service: dto

            deactivate Repository

            Service --> Controller: dto

        deactivate Service

        <-- Controller: dto

    deactivate Controller

end

opt Admin wants to filter by Specialization

    -> Controller: GET /api/operationtype?filter=filter

    activate Controller

        Controller -> Service: GetBySpecialization(specialization)
        
        activate Service

            Service -> Repository: GetBySpecializationAsync(specialization)

            activate Repository

                Repository -> IRepo: GetBySpecializationAsync(specialization)
                
                activate IRepo

                    IRepo --> Repository: operationTypes

                deactivate IRepo

                Repository --> Service: operationTypesDtoList

            deactivate Repository

            Service --> Controller: operationTypesDtoList

        deactivate Service

        <-- Controller: operationTypesDtoList

    deactivate Controller

end

opt Admin wants to filter by Status (active/inactive)

    -> Controller: GET /api/operationtype?filter=filter

    activate Controller

        Controller -> Service: GetByStatus(status)
        
        activate Service

            Service -> Repository: GetByStatusAsync(status)

            activate Repository

                Repository -> IRepo: GetByStatusAsync(status)
                
                activate IRepo

                    IRepo --> Repository: operationTypes

                deactivate IRepo

                Repository --> Service: operationTypesDtoList

            deactivate Repository

            Service --> Controller: operationTypesDtoList

        deactivate Service

        <-- Controller: operationTypesDtoList

    deactivate Controller

end

@enduml

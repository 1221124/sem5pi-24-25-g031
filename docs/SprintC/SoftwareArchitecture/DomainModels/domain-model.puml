@startuml domain-model

skinparam packageStyle rectangle
skinparam shadowing false
skinparam classAttributeIconSize 0
skinparam linetype ortho

left to right direction
top to bottom direction

hide methods
hide circle

title Domain Model

package UserAggregate #MediumAquaMarine {
  class User <<root entity>>
  class Username <<value object>>
  note right of Username: same as the user's email (unique identifier)
  class Role <<value object>> {
    ADMIN, DOCTOR, NURSE, TECHNICIAN, PATIENT
  }
  class UserStatus <<value object>> {
    ACTIVE, INACTIVE, PENDING, BLOCKED
  }
}

package PatientAggregate #LightSalmon {
  class Patient <<root entity>>
  class DateOfBirth <<value object>>
  note right of DateOfBirth: format: system date
  class Gender <<value object>> {
    MALE, FEMALE
  }
  class EmergencyContact <<value object>>
  note right of EmergencyContact: ContactInformation
}

package PatientMedicalRecordAggregate #OliveDrab {
  class PatientMedicalRecord <<root entity>>
}

package AllergyAggregate #LavenderBlush {
  class Allergy <<root entity>>
}

package MedicalConditionAggregate #Magenta {
  class MedicalCondition <<root entity>>
  class CommonSymptom <<value object>>
  note right of CommonSymptom: string
}

package SpecializationAggregate #LawnGreen {
  class Specialization <<root entity>>
}

package RoomTypeAggregate #PowderBlue {
  class RoomType <<root entity>>
  class RoomTypeCode <<value object>>
  note right of RoomTypeCode: unique identifier, max 8 chars, no spaces, only: letters, numbers and "-" allowed
  class AvailableForSurgeries <<value object>>
  note right of AvailableForSurgeries: boolean
}

package StaffAggregate #Pink {
  class Staff <<root entity>>
  class LicenseNumber <<value object>>
  note left of LicenseNumber: unique identifier
}

package OperationRequestAggregate #LightGoldenRodYellow {
  class OperationRequest <<root entity>>
  class RequestCode <<value object>>
  note right of RequestCode: unique identifier
  class DeadlineDate <<value object>>
  class Priority <<value object>> {
    ELECTIVE, URGENT, EMERGENCY
  }
}

package OperationTypeAggregate #PaleGreen {
  class OperationType <<root entity>>
  class OperationTypeCode <<value object>>
  note bottom of OperationTypeCode: unique identifier
  class OperationTypeName <<value object>>
  class RequiredStaff <<value object>>
  class Quantity <<value object>>
  note right of Quantity: number of staff required (integer > 0)
  class OperationPhaseDetails <<value object>>
  class OperationPhase <<value object>> {
    ANAESTHESIA_PREPARATION, SURGERY_PROCESS, CLEANING
  }
}

package AppointmentAggregate #IndianRed {
  class Appointment <<root entity>>
  class AppointmentID <<value object>>
  note bottom of AppointmentID: unique identifier
  class AppointmentStatus <<value object>> {
    SCHEDULED, COMPLETED, CANCELED
  }  
}

package SurgeryRoomAggregate #LightBlue {
  class SurgeryRoom <<root entity>>
  class SurgeryRoomNumber <<value object>>
  note bottom of SurgeryRoomNumber: unique identifier
  class RoomCapacity <<value object>>
  class AssignedEquipment <<value object>>
  class RoomStatus <<value object>> {
    AVAILABLE, OCCUPIED, UNDER_MAINTENANCE
  }
}

package LogAggregate #LightGray {
  class Log <<root entity>>
  class LogType <<value object>> {
    DELETION, UPDATE, CREATION
  }
  class EntityType <<value object>> {
    PATIENT, STAFF, OPERATION_TYPE
  }
  class EntityID <<value object>>
  note right of EntityID: Guid
}

class FullName <<value object>>
class Name <<value object>>
note right of Name: max 100 chars
class ContactInformation <<value object>>
class PhoneNumber <<value object>>
class Email <<value object>>
class DateTime <<value object>>
class Date <<value object>>
class Time <<value object>>
class Slot <<value object>>
class Status <<value object>> {
  ACTIVE, INACTIVE, PENDING
}
note right of Status: represented as a bool value
class MedicalRecordNumber <<value object>>
note right of MedicalRecordNumber: unique identifier (format: YYYYMMnnnnnn - YYYY = year, MM = month, nnnnnn = sequential number)
class Description
note right of Description: max 2048 chars
class SNOMEDCTCode <<value object>>
class ICD11Code <<value object>>
class Admin
note right of Admin: conceptual class
class Doctor
note right of Doctor: conceptual class
class Nurse
note top of Nurse: conceptual class
class Technician
note right of Technician: conceptual class

FullName "1" -- "2" Name : > has
ContactInformation "1" -- "1" PhoneNumber : > has
ContactInformation "1" -- "1" Email : > has
EmergencyContact "1" -- "1" PhoneNumber : > has
DateTime "1" -- "1" Date : > has
DateTime "1" -- "1" Time : > has
Slot "1" -- "2" DateTime : > consists of

User "1" -- "1" Username : > identified by
User "1" -- "1" Email : > has
User "*" -- "1" Role : > has assigned
User "*" -- "1" UserStatus : > has

User "0..1" <-- "0..1" Staff : < references
User "0..1" <-- "1" Patient : < references

Patient "1..*" --- "1" FullName : > has
Patient "*" --- "1" DateOfBirth : > born on
Patient "*" --- "1" Gender : > has
Patient "1" --- "1" MedicalRecordNumber : > identified by
Patient "1" --- "1" ContactInformation : > has
Patient "1" --- "1" PatientMedicalRecord : > has
Patient "*" ---"1" EmergencyContact : > has
Patient "1" --- "*" Appointment : > has

PatientMedicalRecord "1" -- "1" MedicalRecordNumber: > has
PatientMedicalRecord "1" -- "*" Allergy : > has
PatientMedicalRecord "1" -- "*" MedicalCondition : > has

Allergy "1" -- "1" ICD11Code : > identified by
Allergy "1" -- "1" Name : > has
Allergy "1" -- "0..1" Description : > has

MedicalCondition "1" -- "1" ICD11Code : > identified by
MedicalCondition "1" -- "1" Name : > has
MedicalCondition "1" -- "1" Description : > has
MedicalCondition "*" -- "1..*" CommonSymptom : > has

Staff "1" -- "1" LicenseNumber : > identified by
Staff "*" -- "1" FullName : > has
Staff "*" -- "1" Specialization : > has
Staff "1" -- "1" ContactInformation : > has
Staff "1" -- "*" Slot : > has
Staff "1" -- "*" Appointment : > has
Staff "*" -- "1" Status : > has

Specialization "1" -- "1" SNOMEDCTCode : > identified by
Specialization "1" -- "1" Name : > has
Specialization "1" -- "0..1" Description : > has

OperationRequest "1" -- "1" RequestCode : > identified by
OperationRequest "*" -- "1" Patient : > has
OperationRequest "*" -- "1" Staff : > requested by
OperationRequest "*" -- "1" OperationType : > has
OperationRequest "*" -- "1" DeadlineDate : > has
OperationRequest "*" -- "1" OperationPriority : > has

OperationType "1" -- "1" OperationTypeCode : > identified by
OperationType "1" -- "1" OperationTypeName : > has
OperationType "1" -- "*" RequiredStaff : > needs
OperationType "*" -- "1" Specialization : > has
OperationType "1" -- "1..*" OperationPhaseDetails : > has
OperationType "*" -- "1" Status : > has
RequiredStaff "1" -- "1" Role : > has
RequiredStaff "1" -- "1" Specialization : > has
RequiredStaff "1" -- "1" Quantity : > has
OperationPhaseDetails "1" -- "1" OperationPhase : > has
OperationPhaseDetails "1" -- "1" Time : > has

Appointment "1" -- "1" AppointmentID : > identified by
Appointment "1" -- "1" OperationRequest : > has
Appointment "*" -- "1" DateTime : > scheduled to
Appointment "*" -- "1" AppointmentStatus : > has
Appointment "*" -- "1" SurgeryRoom : > happens in

SurgeryRoom "1" -- "1" SurgeryRoomNumber : > identified by
SurgeryRoom "*" -- "1" RoomType : > is
SurgeryRoom "*" -- "1" RoomCapacity : > has
SurgeryRoom "*" -- "1..*" AssignedEquipment : > has
SurgeryRoom "*" -- "1" RoomStatus : > has
SurgeryRoom "1" -- "*" Slot : > has

RoomType "1" -- "1" RoomTypeCode : > identified by
RoomType "1" -- "1" Name : > has
RoomType "1" -- "0..1" Description : > has
RoomType "1" -- "1" AvailableForSurgeries : > is

Log "*" -- "1" LogType : > has
Log "*" -- "1" EntityType : > has
Log "*" -- "1" EntityID : > has
Log "*" -- "1" DateTime : > has

Doctor "1" -- "1" Staff : > is
Nurse "1" -- "1" Staff : > is
Technician "1" -- "1" Staff : > is

Admin "1" -- "*" User : > manages
Admin "1" -- "*" Staff : > manages
Admin "1" -- "*" Patient : > manages

Admin "1" -- "0..*" OperationType : > manages
Admin "1" -- "0..*" RoomType : > manages
Admin "1" -- "0..*" SurgeryRoom : > manages
Admin "1" -- "0..*" Appointment : > manages
Admin "1" -- "0..*" Allergy : > manages
Admin "1" -- "0..*" MedicalCondition : > manages
Doctor "1" -- "0..*" OperationRequest : > manages
Doctor "1" -- "0..*" PatientMedicalRecord : > manages
Doctor "1" -- "0..*" Appointment : > manages
Doctor "1" -- "0..*" Allergy : > lists
Doctor "1" -- "0..*" MedicalCondition : > lists

@enduml